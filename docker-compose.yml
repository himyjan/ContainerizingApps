version: "3.4"

services:
  node:
    build:
      context: "node/"
    image: node-app
    env_file:
      - "./node/.env"
    ports:
      - 8080:3000

  react:
    build:
      context: "react/"
    image: react-app
    env_file:
      - "./react/.env"
    ports:
      - 8081:3000

  angular:
    build:
      context: "angular/"
    image: angular-app
    env_file:
      - "./angular/.env"
    ports:
      - 8082:3000

  vue:
    build:
      context: "vue/"
    image: vue-app
    env_file:
      - "./vue/.env"
    ports:
      - 8083:3000

  dotnetapp:
    build:
      context: "dotnetapp/"
    image: dotnetapp
  
  aspnetapp:
    build:
      context: "aspnetapp/"
    image: aspnetapp
  
  complexapp:
    build:
      context: "complexapp/"
    image: complexapp

  blazor:
    image: ${DOCKER_REGISTRY-}blazor
    build:
      context: "."
      dockerfile: ./blazor/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;https://+:80
    ports:
      - 8084:80
      - 8085:443
    volumes:
      - ~/.aspnet/https:/root/.aspnet/https:ro
      - ~/.microsoft/usersecrets:/root/.microsoft/usersecrets:ro
  db:
    container_name: 'local-blazor-db'
    image: 'mysql:latest'
    volumes:
      - './MySQL:/var/lib/mysql'
    networks:
      - database
    ports:
      - 3306
    env_file:
      - ./blazor/.env
    restart: unless-stopped

networks:
  database:
  default: